services:
  dev-servers:
    environment:
      - KT_REFERENCE_SERVER_CONFIG=/config/reference-config.yaml
    command: -t
    volumes:
      - ../config:/config
    ports:
      - "8080:8080" # SEP server
      - "8085:8085" # Platform server
      - "8091:8091" # Business Reference server
      - "8092:8092" # Wallet Reference server

  platform:
    command: --sep-server --platform-server --event-processor
    volumes:
      - ../config:/config
    ports:
      - "8080:8080" # SEP server
      - "8085:8085" # Platform server

  observer:
    build:
      context: ../../../../../essential-tests/src/test
      dockerfile: essential-tests/docker-compose-configs/Dockerfile
    command: "--stellar-observer"
    volumes:
      # add mounts for the new config directory
      - ../config:/config
    extra_hosts:
      - "host.docker.internal:host-gateway"

  custody-server:
    command: "--custody-server"
    volumes:
      # add mounts for the new config directory
      - ../config:/config

  reference-server:
    command: "--kotlin-reference-server"
    volumes:
      # add mounts for the new config directory
      - ../config:/config
    environment:
      KT_REFERENCE_SERVER_CONFIG: /config/reference-config.yaml
    ports:
      - "8091:8091"

  sep24-reference-ui:
    image: stellar/sep24-reference-ui
    ports:
      - "3000:80"

  kafka:
    platform: linux
    image: confluentinc/cp-kafka:7.4.3
    ports:
      - "29092:29092"
      - "29093:29093"
      - "29094:29094"
      - "29095:29095"
      - "29096:29096"
      - "29097:29097"
    environment:
      # Quorum
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29096'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

      # General
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      # Listeners
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,SSL://kafka:29093,SASL_SSL://kafka:29094,SASL_PLAINTEXT://kafka:29095,CONTROLLER://kafka:29096,INSIDE://:29097"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,CONTROLLER:PLAINTEXT,INSIDE:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,SSL://kafka:29093,SASL_SSL://kafka:29094,SASL_PLAINTEXT://kafka:29095,INSIDE://kafka:29097"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INSIDE"

      # SASL
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/jaas.conf"

      # SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: creds
      KAFKA_SSL_KEY_CREDENTIALS: creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds

    volumes:
      - ./secrets:/etc/kafka/secrets
  db:
    image: postgres:15.2-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  reference-db:
    image: postgres:15.2-alpine
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    command: -p 5433
