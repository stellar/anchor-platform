openapi: 3.0.0
info:
  version: "0.1"
  title: Event Schemas
  description: |
    This document specifies the schemas used for Events in Stellar Anchor Platform project.
    
    There are currently two types of Events: `QuoteEvent` and `TransactionEvent`. When events occur (quote_created, transaction_created, etc...), the events are published by the Anchor Platform to a queue (Kafka, SQS, ect...) for the Anchor to consume and process.
    
    This differs from the Callbacks API, which defines requests made while the Platform is processing a request from a client application.
tags:
  - name: "Event Schemas"
    description: "Event Schemas for events that are published to a queue for the Anchor to consume."
components:
  schemas:
    QuoteEvent:
      type: object
      properties:
        event_id:
          type: string
        type:
          type: string
          enum:
            - quote_created
          description:
            quote_created - a quote was created via the SEP38 API
        id:
          type: string
        sell_asset:
          type: string
        sell_amount:
          type: string
        buy_asset:
          type: string
        buy_amount:
          type: string
        expires_at:
          type: string
          format: date-time
        price:
          type: string
          description: price without including fees.
        total_price:
          type: string
          description: price including fees.
        creator:
          $ref: '#/components/schemas/StellarId'
        transaction_id:
          type: string
        created_at:
          type: string
          format: date-time
        fee:
          type: object
          properties:
            total:
              type: string
            asset:
              type: string
            details:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  amount:
                    type: string
                required:
                  - name
                  - amount
          required:
            - total
            - asset
      required:
        - event_id
        - type
        - id
        - sell_asset
        - sell_amount
        - buy_asset
        - buy_amount
        - expires_at
        - price
        - total_price
        - created_at
    TransactionEvent:
      type: object
      properties:
        event_id:
          type: string
        type:
          type: string
          enum:
            - transaction_created
            - transaction_status_changed
            - transaction_error
          description: |
            The transaction event type. Can be one of the following:
            - `transaction_created` - a transaction was created through the SEP endpoints.
            - `transaction_status_changed` - the status of a transaction has changed. The detail of the status change is described in the `status_change` field.
            - `transaction_error` - error processing the transaction.

        id:
          type: string
          description: "The id of the transaction."
        sep:
          type: integer
          description: "The SEP related to this TransactionEvent. Currently, only `31` is supported."
          enum: [31]
        kind:
          type: string
          description: "The kind of transaction event. Currently, the only supported one is `receive`."
          enum: ["receive"]
        status:
          type: string
          description: |
            The status of the transaction according with the latest Platform update. Currently, we're supporting all 
            [SEP-31 states](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0031.md#get-transaction), exept for `pending_transaction_info_update`.
          enum: [
            "pending_sender",
            "pending_stellar",
            "pending_customer_info_update",
            "pending_receiver",
            "pending_external",
            "completed",
            "expired",
            "error"
          ]
        status_change:
          $ref: '#/components/schemas/StatusChange'
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
          description: "The id of the [SEP-38](https://stellar.org/protocol/sep-38) firm quote used for the transaction."
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          description: "When the transaction was marked as `completed` or when it was fully refunded."
        transfer_received_at:
          type: string
          format: date-time
          description: "When the Stellar transaction related to this object was received."
        message:
          type: string
          description: "This field may contain any clarifying message related to this TransactionEvent or to the transaction itself."
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        external_transaction_id:
          type: string
          description: "The id of an external transaction to be handled by the Anchor Backend."
        custodial_transaction_id:
          type: string
        source_account:
          type: string
          description: "The Stellar account whose balance was debited in the payment that originated this event. Should be present if this event was originated from a Stellar payment."
        destination_account:
          type: string
          description: "The Stellar account who received the payment that originated this event. Should be present if this event was originated from a Stellar payment."
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'
    Amount:
      type: object
      properties:
        amount:
          type: string
        asset:
          type: string
    StatusChange:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    Refunds:
      type: object
      properties:
        amount_refunded:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        payments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              id_type:
                type: string
                enum:
                  - stellar
                  - external
              amount:
                $ref: '#/components/schemas/Amount'
              fee:
                $ref: '#/components/schemas/Amount'
              requested_at:
                type: string
                format: date-time
              refunded_at:
                type: string
                format: date-time
    StellarId:
      type: object
      description: |
        StellarId's are objects that identify end-users and SEP-31 Sending Anchors, but not SEP-31 Receiving Anchors.

        For a SEP-12 customer, the `id` field should be sufficient to fully identify the customer in the Anchor Backend.
        
        For a SEP-31 Sending Anchor, the `account` field should be used.
      properties:
        id:
          type: string
          description: The `id` of the customer registered through SEP-12.
        account:
          type: string
          description: Either the Stellar account or Muxed account address of the on-chain entity.
    StellarTransaction:
      type: object
      properties:
        id:
          type: string
        memo:
          type: string
        memo_type:
          type: string
          enum:
            - text
            - hash
            - id
        created_at:
          type: string
          format: date-time
        envelope:
          type: string
        payments:
          type: array
          items:
            type: object
            properties:
              operationId:
                type: string
              source_account:
                type: string
              destination_account:
                type: string
              amount:
                $ref: '#/components/schemas/Amount'