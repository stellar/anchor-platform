version: '2.4'
services:
  reference_server:
    image: stellar/anchor-platform:edge
    command: --anchor-reference-server
    environment:
      - REFERENCE_SERVER_CONFIG_ENV=file:/config/reference-config.yaml
    depends_on:
      - db
      - kafka
    volumes:
      - .:/config
    ports:
      - "8081:8081" # reference-server
    extra_hosts:
      - "host.docker.internal:host-gateway"

  observer:
    image: stellar/anchor-platform:edge
    build:
      context: ../../
      dockerfile: integration-tests/docker-compose-configs/Dockerfile
    command: "--stellar-observer"
    environment:
      - SECRET_SEP10_SIGNING_SEED=SAKXNWVTRVR4SJSHZUDB2CLJXEQHRT62MYQWA2HBB7YBOTCFJJJ55BZF
      - SECRET_SEP10_JWT_SECRET=secret
      - SECRET_PLATFORM_API_AUTH_SECRET=myAnchorToPlatformSecret
      - SECRET_CALLBACK_API_AUTH_SECRET=myPlatformToAnchorSecret
      - SECRET_DATA_USERNAME=postgres
      - SECRET_DATA_PASSWORD=password
      - LOG_APPENDER=console_appender
      # assets
      - ASSETS_TYPE=file
      - ASSETS_VALUE=/config/assets.yaml
    volumes:
      # add mounts for the new config directory
      - ../sep24/:/config
    depends_on:
      - db
      - kafka
      - reference_server
    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka:
    platform: linux/x86_64
    image: confluentinc/cp-kafka:6.1.9
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "host.docker.internal:host-gateway"

  zookeeper:
    platform: linux/x86_64
    image: confluentinc/cp-zookeeper:6.1.9
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:latest
    ports:
      - "5440:5440"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGPORT=5440
    extra_hosts:
      - "host.docker.internal:host-gateway"