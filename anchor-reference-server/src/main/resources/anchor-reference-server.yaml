server:
  servlet:
    context-path: /
    port: 8081

#
# The settings of the anchor reference serer
#
anchor.settings:
  version: 0.0.1
  platformApiEndpoint: http://localhost:8080

  # The URL where the anchor reference server can be accessed by the platform.
  hostUrl: http://localhost:8081

# These are secrets shared between Anchor and Platform that are used to safely communicate from `Platform->Anchor`
# and `Anchor->Platform`, specially when they are in different clusters.
#
# When the receiving part decodes the incoming request token, it needs to verify if the token is still valid (and not expired).
integration-auth:
  #
  # authType: used to determine how the authentication will happen between Anchor and Platform. Can be one of the following:
  #     NONE: no authentication is used
  #     API_KEY: the authentication is done using an API key added to the `X-Api-Key` header.
  #     JWT_TOKEN: the authentication is done using a JWT token added to the `Authorization` header. this token is generated from the secret key.
  authType: JWT_TOKEN
  # CallbackAPI requests (`Platform->Anchor`) will contain an authentication header whose token was built using this
  # secret. The Anchor Backend will also store this same secret and use it to decode the incoming token to verify it
  # came from the Platform.
  platformToAnchorSecret: myPlatformToAnchorSecret
  # PlatformAPI requests (`Anchor->Platform`) will contain an authentication header whose token was built using this
  # secret. The Platform Server will use this secret to decode the incoming token to verify it came from the Anchor.
  anchorToPlatformSecret: myAnchorToPlatformSecret
  # Expiration time, in milliseconds, that will be used to build and validate the JWT tokens
  expirationMilliseconds: 30000

event:
  # The listener type. values: [kafka, sqs, amqp]
  # If the listener is kafka, the kafka listener is configured in kafka.listener section.
  # If the listener is sqs, the sqs listener is configured in the sqs.listener section.
  # If the listener is amqp, the AMQP listner is configured in the ampq.listner section.
  listenerType: kafka

# NOTE: AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables need to be set if using AWS MSK
kafka.listener:
  bootstrapServer: localhost:29092
  #bootstrapServer: b-1-public.democluster1.w7j4hi.c25.kafka.us-east-1.amazonaws.com:9198   # AWS MSK broker example
  useSingleQueue: false
  useIAM: false   # IAM authentication for AWS MSK
  eventTypeToQueue:
    all: ap_event_single_queue
    quoteCreated: ap_event_quote_created
    transactionCreated: ap_event_transaction_created
    transactionStatusChanged: ap_event_transaction_status_changed
    transactionError: ap_event_transaction_error

sqs.listener:
  region: us-east-1
  useSingleQueue: false
  eventTypeToQueue:
    all: sdf_dev_ap_event_single_queue.fifo
    quote_created: sdf_dev_ap_event_quote_created.fifo
    transaction_created: sdf_dev_ap_event_transaction_created.fifo
    transaction_status_changed: sdf_dev_ap_event_transaction_status_changed.fifo
    transaction_error: sdf_dev_ap_event_transaction_error.fifo
  accessKey: <ACCESS_KEY>
  secretKey: <SECRET_KEY>

amqp.listener:
  endpoint: localhost:5672
#
# Spring Data JDBC settings for H2
#
spring.datasource.url: jdbc:h2:mem:test
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.H2Dialect

# force gson as serializer/deserializer over jackson
spring.mvc.converters.preferred-json-mapper: gson

#
# Spring Data JDBC settings for SQLite
#
#spring.jpa.database-platform=org.stellar.anchor.reference.sqlite.SQLiteDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.datasource.url=jdbc:sqlite:anchor-reference-server.db
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.datasource.username=admin
#spring.datasource.password=admin

#
# Spring Data JDBC settings for Postgres
#
#spring.jpa.generate-ddl: true
#spring.jpa.database: POSTGRESQL
#spring.jpa.show-sql: false
#spring.datasource.driver-class-name: org.postgresql.Driver
#spring.datasource.url: jdbc:postgresql://localhost:5432/anchorplatform
#spring.datasource.username: anchorplatform
#spring.datasource.password: <PASSWORD>
#spring.mvc.converters.preferred-json-mapper: gson