# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Gradle

on:
  push:
    branches: [ develop ]
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Check code formatting
      run: ./gradlew spotlessCheck || echo "‚ùå Your code is not properly formatted. You can run './gradlew spotlessApply' to format it. üëÄ"
    - name: Clean, Build and Test
      run: |
        ./gradlew clean build
        echo *** SEP test report ***
        cat /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/core/build/reports/tests/test/index.html
        echo *** Platform test report ***
        cat /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/platform/build/reports/tests/test/index.html
        echo *** Anchor reference server test report ***
        cat /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/anchor-reference-server/build/reports/tests/test/index.html

  build_and_push_anchor_platform:
    if: github.event.pull_request == null
    needs: [build_and_test]
    runs-on: ubuntu-latest
    name: Push stellar/anchor-platform:sha to DockerHub
    steps:
    - uses: actions/checkout@v3
    
    - name: Get image tag (short sha)
      shell: bash
      id: get_tag
      run: echo ::set-output name=TAG::$(git rev-parse --short ${{ github.sha }} )

    - name: Login to DockerHub
      uses: docker/login-action@bb984efc561711aaa26e433c32c3521176eae55b
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to DockerHub
      uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
      with:
        push: true
        tags: stellar/anchor-platform:${{ steps.get_tag.outputs.TAG }},stellar/anchor-platform:latest
        file: Dockerfile

  sep_validation_suite:
    needs: [build_and_test]
    runs-on: ubuntu-latest
    name: Validate SEPs (1, 10, 12, 31, 38)
    env:
      PR_NUMBER: ${{github.event.pull_request.number}}
    steps:
      - uses: actions/checkout@v3

      # Find the server endpoint home domain to run the SEP tests.
      - name: Find Home Domain (Preview or Dev)
        id: endpoint-finder
        run: |
          export HOME_DOMAIN=https://anchor-sep-server-dev.stellar.org
          if [ ! -z "$PR_NUMBER" ]
          then
            export HOME_DOMAIN=https://anchor-sep-pr$PR_NUMBER.previews.kube001.services.stellar-ops.com
          fi
          echo HOME_DOMAIN=$HOME_DOMAIN
          echo "::set-output name=HOME_DOMAIN::$HOME_DOMAIN"

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Run Validation Tool
        env:
          HOME_DOMAIN: ${{ steps.endpoint-finder.outputs.HOME_DOMAIN }}
        run: |
          npm install -g @stellar/anchor-tests
          stellar-anchor-tests --home-domain $HOME_DOMAIN --seps 1 10 12 31 38 --sep-config platform/src/test/resources/stellar-anchor-tests-sep-config.json

  complete:
    if: always()
    needs: [build_and_test, sep_validation_suite]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1
