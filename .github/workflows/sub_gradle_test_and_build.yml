name: Gradle Build and Test

on:
  # allows this workflow to be called from another workflow
  workflow_dispatch:
  workflow_call:

jobs:
  gradle_test_and_build:
    name: Gradle Build, Tests and Code Coverage
    runs-on: ubuntu-latest-16-cores
    # write to PR  permission is required for jacocoTestReport Action to update comment
    permissions:
      contents: read
      pull-requests: write
    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # This is to add to DNS entries to access the services started by docker-compose.
      # This should be deprecated. Refer to: https://stackoverflow.com/questions/47762339/how-to-correctly-set-up-docker-network-to-use-localhost-connection/47763442#47763442
      - name: Set up hostnames (/etc/hosts)
        run: |
          sudo echo "127.0.0.1 db" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 zookeeper" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 sep24-reference-ui" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 reference-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 wallet-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 platform" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 custody-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 host.docker.internal" | sudo tee -a /etc/hosts 

      - name: Run Zookeeper, Kafka, Postgres, and Sep24 UI with docker compose
        env:
          TEST_PROFILE_NAME: default
        run: docker-compose -f service-runner/src/main/resources/docker-compose-test.yaml up -d --build

      # Check the docker containers
      - name: Check running containers
        run: docker ps

      # Prepare Stellar Validation Tests
      - name: Pull Stellar Validation Tests Docker Image
        run: docker pull stellar/anchor-tests:v0.6.9 &

      # Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # Gradle test is now printing the test messages to GitHub Actions log.
      # It is not necessary to print the reports.
      - name: Gradle Build. (unit tests only)
        env:
          run_docker: false
        run: ./gradlew clean build jacocoTestReport -x essential-tests:test -x extended-tests:test --no-daemon --stacktrace -x spotlessApply -x spotlessKotlinApply -x javadoc -x javadocJar -x sourcesJar

      - name: Run sep server, platform server, observer, and reference servers for integration tests
        env:
          run_docker: false
          run_all_servers: false
          run_sep_server: true
          run_platform_server: true
          run_observer: true
          run_kotlin_reference_server: true
          run_event_processing_server: true
          run_wallet_server: true

          SEP1_TOML_VALUE: service-runner/src/main/resources/config/stellar.host.docker.internal.toml
          SEP10_HOME_DOMAIN: host.docker.internal:8080
        run: |
          pwd
          cp service-runner/build/libs/anchor-platform-runner-*.jar service-runner/build/libs/anchor-platform-runner.jar
          java -jar service-runner/build/libs/anchor-platform-runner.jar -t &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the sep server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8080/.well-known/stellar.toml"
          expected-status: "200"
          timeout: "300"
          interval: "1"

      - name: Run the integration tests and end-2-end tests
        env:
          run_docker: false
          ANCHOR_DOMAIN: http://host.docker.internal:8080

        run: ./gradlew essential-tests:test

      - name: Run Stellar validation tool
        run: |
          docker run --network host -v ${GITHUB_WORKSPACE}/platform/src/test/resources://config stellar/anchor-tests:v0.6.9 --home-domain http://host.docker.internal:8080 --seps 1 6 10 12 24 31 38 --sep-config //config/stellar-anchor-tests-sep-config.json --verbose

      - name: Stop docker containers
        env:
          TEST_PROFILE_NAME: default
        run: docker-compose -f service-runner/src/main/resources/docker-compose-test.yaml down

      # The following step is to be moved to another workflow.
      - name: Run the extended tests
        run: |
          kill -9 $PID
          ./gradlew extended-tests:test

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/**/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          title: Code Coverage
          update-comment: true

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: gradle-artifact
          path: |
            /etc/hosts
            /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/api-schema/build/reports/
            /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/core/build/reports/
            /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/platform/build/reports/
            /home/runner/work/java-stellar-anchor-sdk/java-stellar-anchor-sdk/essential-tests/build/reports/

  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java-kotlin' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Gradle properties
        run: |
          echo "kotlin.daemon.jvmargs=-Xmx2g" >> gradle.properties

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"