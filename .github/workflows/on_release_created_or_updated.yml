name: Release Published

on:
  workflow_dispatch:
  release:
    types: [ created, edited ]

jobs:
  gradle_build:
    uses: ./.github/workflows/sub_gradle_build.yml

  build_and_push_docker_image:
    needs: [ gradle_build ]
    name: Push to DockerHub (tag=stellar/anchor-platform:${{ github.event.release.tag_name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.16+8'
          distribution: 'temurin'

      # Enable multi-arch emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Use a Buildx builder with the docker-container driver (required for --platform)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:latest

      - name: Get EXPECTED_RELEASE_TAG
        shell: bash
        run: echo "EXPECTED_RELEASE_TAG=$(./gradlew -q printVersionName)" >> "$GITHUB_ENV"

      - name: Fail if the release version and the project version do not match
        if: ${{ github.event.release.tag_name != env.EXPECTED_RELEASE_TAG }}
        run: |
          echo "The release tag is invalid: [${{ github.event.release.tag_name }}]"
          echo "The expected release tag is: [${{ env.EXPECTED_RELEASE_TAG }}]"
          echo "The release tag must match project version."
          exit 1

      - name: Download anchor-platform.tar
        uses: actions/download-artifact@v4
        with:
          name: anchor-platform-tar
          path: ./temp

      - name: Extract anchor-platform.tar
        run: |
          pushd ./temp
          tar -xf ./anchor-platform.tar
          popd

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Optional but often useful to quiet SBOM/provenance warnings on multi-arch
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            stellar/anchor-platform:${{ env.EXPECTED_RELEASE_TAG }}
            stellar/anchor-platform:latest
          # Optional: add build cache for faster rebuilds
          cache-from: type=gha
          cache-to: type=gha,mode=max

  complete:
    if: always()
    needs: [ build_and_push_docker_image ]
    runs-on: ubuntu-latest
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
