name: Release Published

on:
  workflow_dispatch:
  release:
    types: [ created, edited ]

jobs:
  gradle_build:
    uses: ./.github/workflows/sub_gradle_build.yml

  codeql_analysis:
    uses: ./.github/workflows/sub_codeql_analysis.yml

  build_and_push_docker_image:
    needs: [ gradle_build, codeql_analysis ]
    name: Push to DockerHub (tag=stellar/anchor-platform:${{ github.event.release.tag_name }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Get EXPECTED_RELEASE_TAG
        shell: bash
        run: |
          v="$($GITHUB_WORKSPACE/gradlew -q printVersionName)"
          echo "EXPECTED_RELEASE_TAG=$v" | tee -a $GITHUB_ENV

      - name: Fail if the release version and the project version do not match
        if: ${{ github.event.release.tag_name != env.EXPECTED_RELEASE_TAG }}
        run: |
          echo "The release tag is invalid: [${{ github.event.release.tag_name }}]"
          echo "The expected release tag is: [${{ env.EXPECTED_RELEASE_TAG }}]"
          echo "The release tag must match project version."
          exit 1

      - name: Set up QEMU (for cross-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (docker-container driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            stellar/anchor-platform:${{ env.EXPECTED_RELEASE_TAG }}
            stellar/anchor-platform:latest

  complete:
    if: always()
    needs: [ build_and_push_docker_image ]
    runs-on: ubuntu-latest
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
