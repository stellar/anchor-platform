name: Run Extended Tests Workflow

on:
  workflow_dispatch:
  workflow_call:

jobs:
  extended_tests:
    name: Run Extended Tests
    runs-on: ubuntu-latest-16-cores
    steps:
      #############################################
      # Setup JDK 11
      # Download, and Extract java-stellar-anchor-sdk.tar
      # Setup hostnames (/etc/hosts)
      #############################################
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download java-stellar-anchor-sdk.tar
        uses: actions/download-artifact@v3
        with:
          name: java-stellar-anchor-sdk-tar
          path: /home/runner/

      - name: Extract java-stellar-anchor-sdk.tar
        run: |
          cd /home/runner
          tar -xf /home/runner/java-stellar-anchor-sdk.tar
          cd /home/runner/java-stellar-anchor-sdk

      - name: Set up hostnames (/etc/hosts)
        run: |
          sudo echo "127.0.0.1 db" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 sep24-reference-ui" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 reference-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 reference-db" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 wallet-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 platform" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 custody-server" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 host.docker.internal" | sudo tee -a /etc/hosts 

      #############################################

      - name: Run Kafka, Postgres, and Sep24 UI with docker-compose
        run: docker-compose -f /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/docker-compose-test.yaml up -d --build

      # `custody` Tests
      - name: Start `custody` configuration
        env:
          TEST_PROFILE_NAME: custody
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the sep server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8080/.well-known/stellar.toml"
          interval: "1"

      - name: Run `custody` configuration tests
        env:
          TEST_PROFILE_NAME: custody
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :service-runner:clean :extended-tests:clean :extended-tests:test --tests org.stellar.anchor.platform.suite.CustodyTestSuite         
          kill -9 $PID

      # `rpc` Tests
      - name: Start `rpc` configuration
        env:
          TEST_PROFILE_NAME: rpc
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the sep server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8080/.well-known/stellar.toml"
          interval: "1"

      - name: Run `rpc` configuration tests
        env:
          TEST_PROFILE_NAME: rpc
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :extended-tests:test --tests org.stellar.anchor.platform.suite.RpcTestSuite         
          kill -9 $PID      

      # `auth-apikey-custody` Tests
      - name: Start `auth-apikey-custody` configuration
        env:
          TEST_PROFILE_NAME: auth-apikey-custody
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the custody server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8086/health"
          interval: "1"

      - name: Run `auth-apikey-custody` configuration tests
        env:
          TEST_PROFILE_NAME: auth-apikey-custody
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :extended-tests:test --tests org.stellar.anchor.platform.suite.AuthApikeyCustodyTestSuite         
          kill -9 $PID           

      # `auth-jwt-custody` Tests
      - name: Start `auth-jwt-custody` configuration
        env:
          TEST_PROFILE_NAME: auth-jwt-custody
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the custody server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8086/health"
          interval: "1"

      - name: Run `auth-jwt-custody` configuration tests
        env:
          TEST_PROFILE_NAME: auth-jwt-custody
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :extended-tests:test --tests org.stellar.anchor.platform.suite.AuthJwtCustodyTestSuite         
          kill -9 $PID    

      # `auth-apikey-platform` Tests
      - name: Start `auth-apikey-platform` configuration
        env:
          TEST_PROFILE_NAME: auth-apikey-platform
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the platform server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8085/health"
          expected-status: "403"
          interval: "1"

      - name: Run `auth-apikey-platform` configuration tests
        env:
          TEST_PROFILE_NAME: auth-apikey-platform
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :extended-tests:test --tests org.stellar.anchor.platform.suite.AuthApikeyPlatformTestSuite         
          kill -9 $PID

      # `auth-jwt-platform` Tests
      - name: Start `auth-jwt-platform` configuration
        env:
          TEST_PROFILE_NAME: auth-jwt-platform
          KT_REFERENCE_SERVER_CONFIG: /home/runner/java-stellar-anchor-sdk/service-runner/src/main/resources/config/reference-config.yaml
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew startServersWithTestProfile &
          echo "PID=$!" >> $GITHUB_ENV

      - name: Wait for the platform server to start and get ready
        uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8085/health"
          expected-status: "403"
          interval: "1"

      - name: Run `auth-jwt-platform` configuration tests
        env:
          TEST_PROFILE_NAME: auth-jwt-platform
        run: |
          cd /home/runner/java-stellar-anchor-sdk
          ./gradlew :extended-tests:test --tests org.stellar.anchor.platform.suite.AuthJwtPlatformTestSuite         
          kill -9 $PID   

      - name: Upload Extended Tests Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: extended-tests-report
          path: |
            /home/runner/java-stellar-anchor-sdk/extended-tests/build/reports/
        
