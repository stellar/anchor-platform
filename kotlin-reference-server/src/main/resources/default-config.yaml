app:
  version: 0.0.1
  # Enables test endpoints.
  isTest: true
  # The port on which the server will listen for requests.
  port: 8091
  # The URL of the Stellar network to which the Anchor will connect.
  horizonEndpoint: https://horizon-testnet.stellar.org
  # The URL of the platform server.
  platformApiEndpoint: http://localhost:8085
  # The Stellar wallet to which the customer will send the Stellar assets.
  distributionWallet: GBN4NNCDGJO4XW4KQU3CBIESUJWFVBUZPOKUZHT7W7WRB7CWOA7BXVQF
  distributionWalletMemo:
  distributionWalletMemoType:
  secret: SAJW2O2NH5QMMVWYAN352OEXS2RUY675A2HPK5HEG2FRR2NXPYA4OLYN
  # When true, enables test endpoints
  enableTest: true
  # Indicates, that custody integration is enabled
  custodyEnabled: false
  # Indicates, that RPC requests should be used instead of PATCH /transactions endpoint
  rpcEnabled: false

# These are secrets shared between Anchor and Platform that are used to safely communicate from `Platform->Anchor`
# and `Anchor->Platform`, especially when they are in different clusters.
#
# When the receiving part decodes the incoming request token, it needs to verify if the token is still valid (and not expired).
auth:
  # authType: used to determine how the authentication will happen between Anchor and Platform. Can be one of the following:
  #     NONE: no authentication is used
  #     API_KEY: the authentication is done using an API key added to the `X-Api-Key` header.
  #     JWT: the authentication is done using a JWT token added to the `Authorization` header. this token is generated from the secret key.
  type: NONE
  # CallbackAPI requests (`Platform->Anchor`) will contain an authentication header whose token was built using this
  # secret. The Anchor Backend will also store this same secret and use it to decode the incoming token to verify it
  # came from the Platform.
  platformToAnchorSecret: myPlatformToAnchorSecret
  # PlatformAPI requests (`Anchor->Platform`) will contain an authentication header whose token was built using this
  # secret. The Platform Server will use this secret to decode the incoming token to verify it came from the Anchor.
  anchorToPlatformSecret: myAnchorToPlatformSecret
  # Expiration time, in milliseconds, that will be used to build and validate the JWT tokens
  expirationMilliseconds: 30000

event:
  # Enables the Kafka event processor.
  enabled: true
  # The Kafka boostrap server.
  bootstrapServer: localhost:29092
  # The AnchorEvent topic to subscribe to.
  topic: TRANSACTION


sep24:
  # Secret key used to send funds to user accounts.
  # Public key: GABCKCYPAGDDQMSCTMSBO7C2L34NU3XXCW7LR4VVSWCCXMAJY3B4YCZP
  secret: "SAJW2O2NH5QMMVWYAN352OEXS2RUY675A2HPK5HEG2FRR2NXPYA4OLYN"
  # Encryption key for interactive JWT
  interactiveJwtKey: "secret_sep24_interactive_url_jwt_secret"
