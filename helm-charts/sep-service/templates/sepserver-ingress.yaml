apiVersion: v1
data:
  {{- if .Values.ingress.responseHeaders }}
  {{- range $key, $value := .Values.ingress.responseHeaders }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
kind: ConfigMap
metadata:
  name: {{ .Values.ingress.name }}-configmap
  namespace: {{ .Values.namespace }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    {{- $annotations := dict "nginx.ingress.kubernetes.io/custom-headers" (printf "%s/%s-configmap" .Values.namespace .Values.ingress.name) }}
    {{- if .Values.ingress.annotations }}
      {{- $annotations = merge $annotations .Values.ingress.annotations }}
    {{- end }}
    {{- range $key, $value := $annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
  labels:
    app.kubernetes.io/name: {{ .Values.fullName }}-ingress
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- if .Values.ingress.tls.host }}
    - hosts:
        - {{ .Values.ingress.tls.host }}
    {{- end }}
    {{- if .Values.ingress.tls.secretName }}
      secretName: {{ .Values.ingress.tls.secretName }}
    {{- end }}
  {{- end }}
  rules:
    - {{- if .Values.ingress.rules }}
      {{- if .Values.ingress.rules.host }}
      host: {{ .Values.ingress.rules.host }}
      {{- end }}
      {{- end }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.fullName }}-svc-{{ .Values.services.sep.name }}
                port:
                  number: {{ .Values.services.sep.servicePort | default 8080 }}