fullName: anchor-platform
service:
   containerPort: 8080
   servicePort: 8080
   replicas: 1
   type: NodePort
   name: sep
image: 
   repo: stellar
   name: anchor-platform
   tag: latest
   pullPolicy: Always
deployment:
   args:
       - '"--sep-server"'
       - '"--stellar-observer"'
   startupProbePeriodSeconds: 10
   startupProbeFailureThreshold: 30
   serviceAccountName: default
   volumeMounts:
      secrets:
         - name: apsigningseed
           mountPath: signingseed 
      configMaps:
         - name: assets
           mountPath: assets
   hosts:
     - host: "your_anchor_domain.com"
       path: /
       pathType: Prefix
       backend:
         servicePort: "{{ .Values.service.containerPort }}"
         serviceName: "{{ .Values.fullName }}-svc-{{ .Values.service.name }}"
   annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8082"
        prometheus.io/scrape: "true"
   env:
   - name: STELLAR_ANCHOR_CONFIG
     value: file:/config/anchor-config.yaml
   envFrom:
   - secretRef:
       name: anchor-platform-secrets
   - configMapRef:
       name: {{ .Values.fullName }}-config-env-vars
ingress:
   labels:
     app: appy
     test: label_test
   annotations:
     kubernetes.io/ingress.class: "public"
     cert-manager.io/cluster-issuer: "default"
     ingress.kubernetes.io/ssl-redirect: "true"
     ingress.kubernetes.io/browser-xss-filter: "true"
     ingress.kubernetes.io/frame-deny: "true"
     ingress.kubernetes.io/content-type-nosniff: "true"
     ingress.kubernetes.io/hsts-max-age: "31536000"
     ingress.kubernetes.io/hsts-include-subdomains: "true"
   tls:
     host: "your_anchor_domain.com"
     secretName: anchor-platform-sep-server-cert 
   rules:
      hosts:
        - host: "your_anchor_domain.com"
          path: /
          pathType: Prefix
          backend:
            servicePort: "{{ .Values.service.containerPort }}"
            serviceName: "{{ .Values.fullName }}-svc-{{ .Values.service.name }}"

app_config:
  host_url: https://your_anchor_domain.com
  stellar_network.network: TESTNET
  callback_api.base_url: https://your_anchor_domain.com
  callback_api.auth.type: JWT_TOKEN
  sep1.enabled: true
  sep10.enabled: true
  sep10.home_domain: your_anchor_domain.com
  sep12.enabled: true
  sep31.enabled: true
  sep31.deposit_info_generator_type: api
  sep38.enabled: true
  data.type: h2
  assets.type: json

toml_config: |
  ACCOUNTS = []
  VERSION = "0.1.0"
  NETWORK_PASSPHRASE = "Test SDF Network ; September 2015"
  SIGNING_KEY = "GDZCLP2PHTWYQ3BWZMC5D4ZUJX5NU4S7YZHC5EBFAFKL6UJUQ5RKDGSY"
  TRANSFER_SERVER = "https://your_anchor_domain.com/sep6"
  TRANSFER_SERVER_SEP0024 = "https://your_anchor_domain.com/sep24"
  WEB_AUTH_ENDPOINT = "https://your_anchor_domain.com/auth"
  KYC_SERVER = "https://your_anchor_domain.com/sep12"
  DIRECT_PAYMENT_SERVER = "https://your_anchor_domain.com/sep31"
  ANCHOR_QUOTE_SERVER = "https://your_anchor_domain.com//sep38"
  
  [[CURRENCIES]]
  code = "USDC"
  issuer = "GDQOE23CFSUMSVQK4Y5JHPPYK73VYCNHZHA7ENKCV37P6SUEO6XQBKPP"
  status = "test"
  is_asset_anchored = true
  anchor_asset_type = "fiat"
  desc = "A test USDC issued by Circle."
  
  [DOCUMENTATION]
  ORG_NAME = "Your Anchor Domain"
  ORG_URL = "https://your_anchor_domain.org"
  ORG_DESCRIPTION = "Your anchor domain"
  ORG_SUPPORT_EMAIL="support@your_anchor_domain.org"

assets_config: |
  {
    "assets": [
      {
        "schema": "stellar",
        "code": "USDC",
        "issuer": "GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN",
        "distribution_account": "GBJDTHT4562X2H37JMOE6IUTZZSDU6RYGYUNFYCHVFG3J4MYJIMU33HK",
        "significant_decimals": 2,
        "deposit" : {
          "enabled": true,
          "fee_minimum": 0,
          "fee_percent": 0,
          "min_amount": 0,
          "max_amount": 10000
        },
        "withdraw": {
          "enabled": true,
          "fee_fixed": 0,
          "fee_percent": 0,
          "min_amount": 0,
          "max_amount": 10000
        },
        "send": {
          "fee_fixed": 0,
          "fee_percent": 0,
          "min_amount": 0,
          "max_amount": 10000
        }
      }
    ]
  }

